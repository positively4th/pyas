import unittest

from src.pyas_v3 import As
from src.pyas_v3 import Leaf
from src.pyas_v3 import Helpers


class TestOnNew(unittest.TestCase):

    def test_onNew(self):

        class StaticMethod(Leaf):

            prototypes = []

            staticVar = None

            @staticmethod
            def onNew(cls, self):  # cls is class generated by As(...)
                cls.staticVar = (StaticMethod, cls, self)

        class ClassMethod(Leaf):

            prototypes = []

            staticVar = None

            @classmethod
            def onNew(cls, self):  # cls is class ClassMethod
                cls.staticVar = (ClassMethod, cls, self)

        class Child(Leaf):
            prototypes = []

            staticVar = None

        childClassee = As(Child, ClassMethod)()
        self.assertIsNone(childClassee.staticVar)

        childStaticee = As(Child, StaticMethod)()
        self.assertEqual((StaticMethod, As(Child, StaticMethod),
                         childStaticee), childStaticee.staticVar)

        self.assertIsNone(childClassee.staticVar)


if __name__ == '__main__':
    unittest.main()
